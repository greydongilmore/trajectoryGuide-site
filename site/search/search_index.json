{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"An open-source software for neurosurgical trajectory planning, visualization, and postoperative assessment trajectoryGuide provides the capability to plan surgical trajectories within 3D Slicer, an open-source medical imaging software. trajectoryGuide contains modules that span the three phases of neurosurgical trajectory planning: Pre-operative automatic stereotactic frame detection (supported frames: Leksell, BRW) co-registration of MRI scans with 3D volumetric stealth MRI trajectory planning providing coordinates in anatomical and frame space (including arc, ring angles) Intra-operative update final electrode position based on intra-operative testing display microelectrode recordings (MER) within the patients MRI space Post-operative co-registration of post-op imaging (CT or MRI) visualization of implanted electrodes (planned, intra-op update, and post-op location) visualize stimulation settings as volume of tissues activated fields view data within a template space (default is MNI space)","title":"Home"},{"location":"about.html","text":"What is DBS? \u00b6 DBS, short for Deep Brain Stiumation, is an established surgical treatment for people with movement disroders, such as Parkinson's disease and dystonia. It involves implanting electrodes (thin metal wires) within certain areas of the brain and sending electrical impulses to the brain through these electrodes. The electrical impulses are controlled a device that's implanted by the chest. Diagram from: https://mayfieldclinic.com/pe-dbs.htm Learn more about deep brain stimulation here What is DBS Guide? \u00b6 DBS Guide is a surgical planning, visuazliation, and postoperative assessment tool used for deep brain stimulation. It provides capabilities across the entire surgical spectrum: Pre-operative Co-registration of MRI scans with 3D volumetric stealth MRI Planning DBS lead trajectory Intra-operative Co-restration of frame CT with MRI Confirmation of frame fiducials using automated frame detection (DBS Guide identifies the frame fiducials using image recognition) Determining accuracy of (x,y,z) coordinates, arc and ring angles Mapping of microelectrode (MER) recordings and plotting them in patient brain anatomy Saving information regarding the trajectory used (medial, lateral, etc.) and other lead implant specs (e.g. depth) Post-operative Co-registration of post-op CT with pre-op MRI Visualization of implanted electrodes with high accuracy Manipulation of stimulation settings Volume tissue activation model based on stimulation settings What is 3D Slicer? \u00b6 3D Slicer is an open-source software platform for medical image informatics, image processing, and 3D visualization. Built over two decades through support from the National Institutes of Health and a worldwide developer community, Slicer brings free, powerful cross-platform (Linux, MacOSX, and Windows) processing tools to physicians, researchers, and the general public. 3D Slicer Features \u00b6 Multi-organ: from head to toe Support for multi-modality imaging including: MRI, CT, US, nuclear medicine, and microscopy Bidirectional interface for devices Sources \u00b6 https://slicer.org https://www.slicer.org/wiki/Main_Page Fedorov A., Beichel R., Kalpathy-Cramer J., Finet J., Fillion-Robin J-C., Pujol S., Bauer C., Jennings D., Fennessy F., Sonka M., Buatti J., Aylward S.R., Miller J.V., Pieper S., Kikinis R. 3D Slicer as an Image Computing Platform for the Quantitative Imaging Network <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3466397/> _. Magnetic Resonance Imaging. 2012 Nov;30(9):1323-41. PMID: 22770690.","title":"About"},{"location":"about.html#what-is-dbs","text":"DBS, short for Deep Brain Stiumation, is an established surgical treatment for people with movement disroders, such as Parkinson's disease and dystonia. It involves implanting electrodes (thin metal wires) within certain areas of the brain and sending electrical impulses to the brain through these electrodes. The electrical impulses are controlled a device that's implanted by the chest. Diagram from: https://mayfieldclinic.com/pe-dbs.htm Learn more about deep brain stimulation here","title":"What is DBS?"},{"location":"about.html#what-is-dbs-guide","text":"DBS Guide is a surgical planning, visuazliation, and postoperative assessment tool used for deep brain stimulation. It provides capabilities across the entire surgical spectrum: Pre-operative Co-registration of MRI scans with 3D volumetric stealth MRI Planning DBS lead trajectory Intra-operative Co-restration of frame CT with MRI Confirmation of frame fiducials using automated frame detection (DBS Guide identifies the frame fiducials using image recognition) Determining accuracy of (x,y,z) coordinates, arc and ring angles Mapping of microelectrode (MER) recordings and plotting them in patient brain anatomy Saving information regarding the trajectory used (medial, lateral, etc.) and other lead implant specs (e.g. depth) Post-operative Co-registration of post-op CT with pre-op MRI Visualization of implanted electrodes with high accuracy Manipulation of stimulation settings Volume tissue activation model based on stimulation settings","title":"What is DBS Guide?"},{"location":"about.html#what-is-3d-slicer","text":"3D Slicer is an open-source software platform for medical image informatics, image processing, and 3D visualization. Built over two decades through support from the National Institutes of Health and a worldwide developer community, Slicer brings free, powerful cross-platform (Linux, MacOSX, and Windows) processing tools to physicians, researchers, and the general public.","title":"What is 3D Slicer?"},{"location":"about.html#3d-slicer-features","text":"Multi-organ: from head to toe Support for multi-modality imaging including: MRI, CT, US, nuclear medicine, and microscopy Bidirectional interface for devices","title":"3D Slicer Features"},{"location":"about.html#sources","text":"https://slicer.org https://www.slicer.org/wiki/Main_Page Fedorov A., Beichel R., Kalpathy-Cramer J., Finet J., Fillion-Robin J-C., Pujol S., Bauer C., Jennings D., Fennessy F., Sonka M., Buatti J., Aylward S.R., Miller J.V., Pieper S., Kikinis R. 3D Slicer as an Image Computing Platform for the Quantitative Imaging Network <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3466397/> _. Magnetic Resonance Imaging. 2012 Nov;30(9):1323-41. PMID: 22770690.","title":"Sources"},{"location":"installation.html","text":"Requirements \u00b6 3D Slicer 3D Slicer (Version 4.11.0 or later) , Download here: https://download.slicer.org/ trajectoryGuide source code download the latest version of trajectoryGuide Unzip the folder and save it somewhere on your system. For this tutorial, the file has been saved in Desktop. Loading trajectoryGuide into 3D Slicer \u00b6 Open 3D Slicer It should look like this (if you have/don't have a Python Interactor at the bottom, that is fine) Load trajectoryGuide module On the top menu bar next to \" Modules \", select the drop down menu and go to \" Developer Tools \", then select \" Extension Wizard .\" Under Extension Tools, press \" Select Extension. \" Select the trajectoryGuide-master folder and open it Pop-up Window A window will pop up. Make sure both options are selected and press yes. The trajectoryGuide module is now apart of Slicer. Open trajectoryGuide in Slicer To open it, go to the modules drop down menu and select trajectoryGuide -> trajectoryGuide You have now successfully loaded trajectoryGuide into Slicer. Your screen should look like this: Reopening Slicer/trajectoryGuide The next time you open Slicer, you don't have to go through the Extension Wizard. trajectoryGuide will be included in Slicer's modules. You may open trajectoryGuide straight from the Modules drop down menu ( all you have to do is step 4 next time )","title":"Installation"},{"location":"installation.html#requirements","text":"3D Slicer 3D Slicer (Version 4.11.0 or later) , Download here: https://download.slicer.org/ trajectoryGuide source code download the latest version of trajectoryGuide Unzip the folder and save it somewhere on your system. For this tutorial, the file has been saved in Desktop.","title":"Requirements"},{"location":"installation.html#loading-trajectoryguide-into-3d-slicer","text":"Open 3D Slicer It should look like this (if you have/don't have a Python Interactor at the bottom, that is fine) Load trajectoryGuide module On the top menu bar next to \" Modules \", select the drop down menu and go to \" Developer Tools \", then select \" Extension Wizard .\" Under Extension Tools, press \" Select Extension. \" Select the trajectoryGuide-master folder and open it Pop-up Window A window will pop up. Make sure both options are selected and press yes. The trajectoryGuide module is now apart of Slicer. Open trajectoryGuide in Slicer To open it, go to the modules drop down menu and select trajectoryGuide -> trajectoryGuide You have now successfully loaded trajectoryGuide into Slicer. Your screen should look like this: Reopening Slicer/trajectoryGuide The next time you open Slicer, you don't have to go through the Extension Wizard. trajectoryGuide will be included in Slicer's modules. You may open trajectoryGuide straight from the Modules drop down menu ( all you have to do is step 4 next time )","title":"Loading trajectoryGuide into 3D Slicer"},{"location":"3dslicer/01_interface.html","text":"Warning Ensure you are using 3D Slicer 4.11 Interface Overview \u00b6 Slicer stores all loaded data in a data repository, called the \u201cscene\u201d (or Slicer scene or MRML scene). Each data set, such as an image volume, surface model, or point set, is represented in the scene as a \u201cnode\u201d. Slicer provides a large number \u201cmodules\u201d, each implementing a specific set of functions for creating or manipulating data in the scene. Modules typically do not interact with each other directly: they just all operate on the data nodes in the scene. Slicer package contains over 100 built-in modules and additional modules can be installed by using the Extension Manager. 2D Views \u00b6 Three default slice views are provided (with Red, Yellow and Green colored bars) in which Axial, Saggital, Coronal or Oblique 2D slices of volume images can be displayed. Additional generic slice views have a grey colored bar and an identifying number in their upper left corner. Slice View Controls: The colored bar across any Slice View shows a pushpin icon on its left. When the mouse rolls over this icon, a panel for configuring the slice view is displayed. The panel is hidden when the mouse moves away. For persistent display of this panel, just click the pushpin icon. For more options, click the double-arrow icon. View Controllers module provides an alternate way of displaying these controllers in the Module Panel. Reset field of view (small square) centers the slice on the current background volume Link button synchronizes properties (which volumes are displayed, zoom factor, position of parallel views, opacities, etc.) between all slice views in the same view group. Long-click on the button exposes hot-linked option, which controls when properties are synchronized (immediately or when the mouse button is released). Eye button in the top row can show the current slice in 3D views. Drop-down menu of the button contains advanced options to customize how this slice is rendered: \"...match volume\" means that the properties are taken from the full volume, while \"...match 2D\" means that the properties are copied from the current slice view (for example, copies zoom and pan position). Typically these differences are subtle and the settings can be left at default. Orientation Selection displays allows you to choose the orientation for this slice view. Lightbox to select a mosiac (a.k.a. contact sheet) view. Not all operations work in this mode and it may be removed in the future. Reformat allows interactive manipulation of the slice orientation. Blending options how foreground and background layers are mixed. Spacing and Field of View Spacing defines the increment for the slice offset slider. Field of view sets the zoom level for the slice. Rotate to Volume Plane changes the orientation of the slice to match the closest acquisition orientation of the displayed volume Show Orientation Marker controls display of human, cube, etc in lower right corner Ruler controls display of ruler in slice view 3D View \u00b6 Displays a rendered 3D view of the scene along with visual references to specify orientation and scale. Default orientation axes: A = anterior; P = posterior R = right; L = left S = superior; I = inferior 3D View Controls: The blue bar across any 3D View shows a pushpin icon on its left. When the mouse rolls over this icon, a panel for configuring the 3D View is displayed. The panel is hidden when the mouse moves away. For persistent display of this panel, just click the pushpin icon. Mouse & Keyboard Shortcuts \u00b6 The following summary of shortcuts is taken from the 3D Slicer documentation . Note The shortcuts are working on any stable 3D Slicer version >=4.10.0 Generic shortcuts \u00b6 Shortcut Operation Ctrl + f find module by name (hit Enter to select) Ctrl + a add data from file Ctrl + o add data from file Ctrl + s save data to files Ctrl + w close scene Ctrl + 0 show Error Log Ctrl + 1 show Application Help Ctrl + 2 show Application Settings Ctrl + 3 show/hide Python Interactor Ctrl + 4 show Extension Manager Ctrl + 5 show/hide Module Panel Ctrl + h open default startup module (configurable in Application Settings) 2D Views \u00b6 The following shortcuts are available when a slice view is active. To activate a view, click inside the view: if you do not want to change anything in the view, just activate it then do right-click without moving the mouse. Note that simply hovering over the mouse over a slice view will not activate the view. Shortcut Operation right-click + drag up/down zoom image in/out left-click + drag up/down adjust level of image left-click + drag left/right adjust window of image Ctrl + mouse wheel zoom image in/out middle-click + drag pan (translate) view Shift + left-click + drag pan (translate) view left arrow / right arrow move to previous/next slice b / f move to previous/next slice Shift + mouse move move crosshair in all views v toggle slice visibility in 3D view r reset zoom and pan to default g toggle segmentation or labelmap volume t toggle foreground volume visibility [ / ] use previous/next volume as background { / } use previous/next volume as foreground 3D views \u00b6 The following shortcuts are available when a 3D view is active. To activate a view, click inside the view: if you do not want to change anything in the view, just activate it then do right-click without moving the mouse. Note that simply hovering over the mouse over a slice view will not activate the view. Shortcut Operation Shift + mouse move move crosshair in all views left-click + drag rotate view left arrow / right arrow rotate view up arrow / down arrow rotate view End or Keypad 1 rotate to view from anterior Shift + End or Shift + Keypad 1 rotate to view from posterior Page Down or Keypad 3 rotate to view from left side Shift + Page Down or Shift + Keypad 3 rotate to view from right side Home or Keypad 7 rotate to view from superior Shift + Home or Shift + Keypad 7 rotate to view from inferior right-click + drag up/down zoom view in/out Ctrl + mouse wheel zoom view in/out + / - zoom view in/out middle-click + drag pan (translate) view Shift + left-click + drag pan (translate) view Shift + left arrow / Shift + right arrow pan (translate) view Shift + up arrow / Shift + down arrow pan (translate) view Shift + Keypad 2 / Shift + Keypad 4 pan (translate) view Shift + Keypad 6 / Shift + Keypad 8 pan (translate) view Keypad 0 or Insert reset zoom and pan, rotate to nearest standard view","title":"User Interface"},{"location":"3dslicer/01_interface.html#interface-overview","text":"Slicer stores all loaded data in a data repository, called the \u201cscene\u201d (or Slicer scene or MRML scene). Each data set, such as an image volume, surface model, or point set, is represented in the scene as a \u201cnode\u201d. Slicer provides a large number \u201cmodules\u201d, each implementing a specific set of functions for creating or manipulating data in the scene. Modules typically do not interact with each other directly: they just all operate on the data nodes in the scene. Slicer package contains over 100 built-in modules and additional modules can be installed by using the Extension Manager.","title":"Interface Overview"},{"location":"3dslicer/01_interface.html#2d-views","text":"Three default slice views are provided (with Red, Yellow and Green colored bars) in which Axial, Saggital, Coronal or Oblique 2D slices of volume images can be displayed. Additional generic slice views have a grey colored bar and an identifying number in their upper left corner. Slice View Controls: The colored bar across any Slice View shows a pushpin icon on its left. When the mouse rolls over this icon, a panel for configuring the slice view is displayed. The panel is hidden when the mouse moves away. For persistent display of this panel, just click the pushpin icon. For more options, click the double-arrow icon. View Controllers module provides an alternate way of displaying these controllers in the Module Panel. Reset field of view (small square) centers the slice on the current background volume Link button synchronizes properties (which volumes are displayed, zoom factor, position of parallel views, opacities, etc.) between all slice views in the same view group. Long-click on the button exposes hot-linked option, which controls when properties are synchronized (immediately or when the mouse button is released). Eye button in the top row can show the current slice in 3D views. Drop-down menu of the button contains advanced options to customize how this slice is rendered: \"...match volume\" means that the properties are taken from the full volume, while \"...match 2D\" means that the properties are copied from the current slice view (for example, copies zoom and pan position). Typically these differences are subtle and the settings can be left at default. Orientation Selection displays allows you to choose the orientation for this slice view. Lightbox to select a mosiac (a.k.a. contact sheet) view. Not all operations work in this mode and it may be removed in the future. Reformat allows interactive manipulation of the slice orientation. Blending options how foreground and background layers are mixed. Spacing and Field of View Spacing defines the increment for the slice offset slider. Field of view sets the zoom level for the slice. Rotate to Volume Plane changes the orientation of the slice to match the closest acquisition orientation of the displayed volume Show Orientation Marker controls display of human, cube, etc in lower right corner Ruler controls display of ruler in slice view","title":"2D Views"},{"location":"3dslicer/01_interface.html#3d-view","text":"Displays a rendered 3D view of the scene along with visual references to specify orientation and scale. Default orientation axes: A = anterior; P = posterior R = right; L = left S = superior; I = inferior 3D View Controls: The blue bar across any 3D View shows a pushpin icon on its left. When the mouse rolls over this icon, a panel for configuring the 3D View is displayed. The panel is hidden when the mouse moves away. For persistent display of this panel, just click the pushpin icon.","title":"3D View"},{"location":"3dslicer/01_interface.html#mouse-keyboard-shortcuts","text":"The following summary of shortcuts is taken from the 3D Slicer documentation . Note The shortcuts are working on any stable 3D Slicer version >=4.10.0","title":"Mouse &amp; Keyboard Shortcuts"},{"location":"3dslicer/01_interface.html#generic-shortcuts","text":"Shortcut Operation Ctrl + f find module by name (hit Enter to select) Ctrl + a add data from file Ctrl + o add data from file Ctrl + s save data to files Ctrl + w close scene Ctrl + 0 show Error Log Ctrl + 1 show Application Help Ctrl + 2 show Application Settings Ctrl + 3 show/hide Python Interactor Ctrl + 4 show Extension Manager Ctrl + 5 show/hide Module Panel Ctrl + h open default startup module (configurable in Application Settings)","title":"Generic shortcuts"},{"location":"3dslicer/01_interface.html#2d-views_1","text":"The following shortcuts are available when a slice view is active. To activate a view, click inside the view: if you do not want to change anything in the view, just activate it then do right-click without moving the mouse. Note that simply hovering over the mouse over a slice view will not activate the view. Shortcut Operation right-click + drag up/down zoom image in/out left-click + drag up/down adjust level of image left-click + drag left/right adjust window of image Ctrl + mouse wheel zoom image in/out middle-click + drag pan (translate) view Shift + left-click + drag pan (translate) view left arrow / right arrow move to previous/next slice b / f move to previous/next slice Shift + mouse move move crosshair in all views v toggle slice visibility in 3D view r reset zoom and pan to default g toggle segmentation or labelmap volume t toggle foreground volume visibility [ / ] use previous/next volume as background { / } use previous/next volume as foreground","title":"2D Views"},{"location":"3dslicer/01_interface.html#3d-views","text":"The following shortcuts are available when a 3D view is active. To activate a view, click inside the view: if you do not want to change anything in the view, just activate it then do right-click without moving the mouse. Note that simply hovering over the mouse over a slice view will not activate the view. Shortcut Operation Shift + mouse move move crosshair in all views left-click + drag rotate view left arrow / right arrow rotate view up arrow / down arrow rotate view End or Keypad 1 rotate to view from anterior Shift + End or Shift + Keypad 1 rotate to view from posterior Page Down or Keypad 3 rotate to view from left side Shift + Page Down or Shift + Keypad 3 rotate to view from right side Home or Keypad 7 rotate to view from superior Shift + Home or Shift + Keypad 7 rotate to view from inferior right-click + drag up/down zoom view in/out Ctrl + mouse wheel zoom view in/out + / - zoom view in/out middle-click + drag pan (translate) view Shift + left-click + drag pan (translate) view Shift + left arrow / Shift + right arrow pan (translate) view Shift + up arrow / Shift + down arrow pan (translate) view Shift + Keypad 2 / Shift + Keypad 4 pan (translate) view Shift + Keypad 6 / Shift + Keypad 8 pan (translate) view Keypad 0 or Insert reset zoom and pan, rotate to nearest standard view","title":"3D views"},{"location":"3dslicer/02_saving_data.html","text":"Warning Ensure you are using 3D Slicer 4.11 Walkthrough \u00b6 Click on the File menu at the top. Choose Save , the dialog box shown below will appear: If this is your first time saving you will have to define the directory to save the files. Click on Change directory for selected files . The dialog box below will appear: Find the directory where you want to save the data, create a new folder called [VolumeID]_scene and then double click on it so you are now within the directory. Select Choose . You will now notice that the .nii file is de-selected and is in the original directory location. All the other files you will be saving are in the newly created [VolumeID]_scene folder. Click Save . If this not your first time saving you will see two warning messages. The first will notify you that the .mrml file already exists and ask if you want to replace it. Click OK . A second warning message will appear letting you know that the .fcsv file already exists and ask if you would like to replace it. Click Yes to All . This will overwrite your old datafiles with the newer ones. To close the current scene, before opening a new subject, click the File menu and select Close Scene .","title":"Saving Data"},{"location":"3dslicer/02_saving_data.html#walkthrough","text":"Click on the File menu at the top. Choose Save , the dialog box shown below will appear: If this is your first time saving you will have to define the directory to save the files. Click on Change directory for selected files . The dialog box below will appear: Find the directory where you want to save the data, create a new folder called [VolumeID]_scene and then double click on it so you are now within the directory. Select Choose . You will now notice that the .nii file is de-selected and is in the original directory location. All the other files you will be saving are in the newly created [VolumeID]_scene folder. Click Save . If this not your first time saving you will see two warning messages. The first will notify you that the .mrml file already exists and ask if you want to replace it. Click OK . A second warning message will appear letting you know that the .fcsv file already exists and ask if you would like to replace it. Click Yes to All . This will overwrite your old datafiles with the newer ones. To close the current scene, before opening a new subject, click the File menu and select Close Scene .","title":"Walkthrough"},{"location":"widgets/00_overview.html","text":"What is DBS? \u00b6 Deep Brain Stimulation (DBS), is an established neurosurgical treatment for individuals living with a movement disorder, such as Parkinsons disease. The surgical process involves chronic implantation of stimulation electrodes within specific areas of the brain. The electrodes send electrical impulses to the brain to alleviate motor symptoms associated with the movement disorder. Diagram from: https://mayfieldclinic.com/pe-dbs.htm Learn more about deep brain stimulation here . What is trajectoryGuide? \u00b6 trajectoryGuide is an open-source software suite that provides the capability to plan neurosurgical trajectories within 3D Slicer. trajectoryGuide contains several modules that span the three phases of surgical intervention: pre-op, intra-op, and post-op. What is 3D Slicer? \u00b6 3D Slicer is an open-source software platform for medical image informatics, image processing, and 3D visualization. Slicer brings free, powerful cross-platform (Linux, MacOSX, and Windows) processing tools to physicians, researchers, and the general public. 3D Slicer Features \u00b6 Multi-organ: from head to toe Support for multi-modality imaging including: MRI, CT, US, nuclear medicine, and microscopy Bidirectional interface for devices Sources \u00b6 https://slicer.org https://www.slicer.org/wiki/Main_Page Fedorov A., Beichel R., Kalpathy-Cramer J., Finet J., Fillion-Robin J-C., Pujol S., Bauer C., Jennings D., Fennessy F., Sonka M., Buatti J., Aylward S.R., Miller J.V., Pieper S., Kikinis R. 3D Slicer as an Image Computing Platform for the Quantitative Imaging Network <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3466397/> _. Magnetic Resonance Imaging. 2012 Nov;30(9):1323-41. PMID: 22770690.","title":"Overview"},{"location":"widgets/00_overview.html#what-is-dbs","text":"Deep Brain Stimulation (DBS), is an established neurosurgical treatment for individuals living with a movement disorder, such as Parkinsons disease. The surgical process involves chronic implantation of stimulation electrodes within specific areas of the brain. The electrodes send electrical impulses to the brain to alleviate motor symptoms associated with the movement disorder. Diagram from: https://mayfieldclinic.com/pe-dbs.htm Learn more about deep brain stimulation here .","title":"What is DBS?"},{"location":"widgets/00_overview.html#what-is-trajectoryguide","text":"trajectoryGuide is an open-source software suite that provides the capability to plan neurosurgical trajectories within 3D Slicer. trajectoryGuide contains several modules that span the three phases of surgical intervention: pre-op, intra-op, and post-op.","title":"What is trajectoryGuide?"},{"location":"widgets/00_overview.html#what-is-3d-slicer","text":"3D Slicer is an open-source software platform for medical image informatics, image processing, and 3D visualization. Slicer brings free, powerful cross-platform (Linux, MacOSX, and Windows) processing tools to physicians, researchers, and the general public.","title":"What is 3D Slicer?"},{"location":"widgets/00_overview.html#3d-slicer-features","text":"Multi-organ: from head to toe Support for multi-modality imaging including: MRI, CT, US, nuclear medicine, and microscopy Bidirectional interface for devices","title":"3D Slicer Features"},{"location":"widgets/00_overview.html#sources","text":"https://slicer.org https://www.slicer.org/wiki/Main_Page Fedorov A., Beichel R., Kalpathy-Cramer J., Finet J., Fillion-Robin J-C., Pujol S., Bauer C., Jennings D., Fennessy F., Sonka M., Buatti J., Aylward S.R., Miller J.V., Pieper S., Kikinis R. 3D Slicer as an Image Computing Platform for the Quantitative Imaging Network <https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3466397/> _. Magnetic Resonance Imaging. 2012 Nov;30(9):1323-41. PMID: 22770690.","title":"Sources"},{"location":"widgets/01_patient_directory.html","text":"If you have not installed trajectoryGuide into 3D Slicer please follow the installation instructions ). The first module in trajectoryGuide handles the import of patient imaging data. The data should be within a single directory, this directory will be selected within the import window (do not select the files within the directory). During the initial data import for a patient, trajectoryGuide will store a copy of the imaging data into a source directory as a backup, these files will remain unchanged. Load patient directory \u00b6 An example patient directory is shown below. trajectoryGuide will store the imaging data in NIFTI (Neuroinformatics Technology Initiative) format, with the file extension .nii.gz . If the original imaging data is in DICOM format, the files will be converted to NIFTI (the source directory will still contain the original DICOM files). You will notice that each imaging file has an associated .json file. This file contains metadata associated with the imaging file as it progresses through the trajectoryGuide workflow. Select the import options prior to loading the patient directory. Implanted Sides: indicate if the trajectory plan will be unilateral or bilateral Rename Scans: trajectoryGuide will rename the imaging data to comply with BIDS format, the imaging filenames will be shortened Use Previously Values: this option is recommended. If the patient directory has already been loaded by trajectoryGuide, then the previous data values will be re-loaded Adjust surgical metadata \u00b6 Once you click Load Data , another widget will appear below the patient directory widget. This new widget stores surgical metadata about the patient. Name : the identifier given to the patient, the default value will be the name of the patient directory. OR Date: the date of the surgical intervention. Surgeon: the name of the surgeon who carried out the surgical intervention. This drop-down box has an option to add additional surgeons. When Other is selected, a line edit box will appear to the right. When you finish entering the surgeon name press the Enter key. Target: the name of the surgical target. This drop-down box has an option to add additional targets. When Other is selected, a line edit box will appear to the right. When you finish entering the surgeon name press the Enter key.","title":"Patient Directory"},{"location":"widgets/01_patient_directory.html#load-patient-directory","text":"An example patient directory is shown below. trajectoryGuide will store the imaging data in NIFTI (Neuroinformatics Technology Initiative) format, with the file extension .nii.gz . If the original imaging data is in DICOM format, the files will be converted to NIFTI (the source directory will still contain the original DICOM files). You will notice that each imaging file has an associated .json file. This file contains metadata associated with the imaging file as it progresses through the trajectoryGuide workflow. Select the import options prior to loading the patient directory. Implanted Sides: indicate if the trajectory plan will be unilateral or bilateral Rename Scans: trajectoryGuide will rename the imaging data to comply with BIDS format, the imaging filenames will be shortened Use Previously Values: this option is recommended. If the patient directory has already been loaded by trajectoryGuide, then the previous data values will be re-loaded","title":"Load patient directory"},{"location":"widgets/01_patient_directory.html#adjust-surgical-metadata","text":"Once you click Load Data , another widget will appear below the patient directory widget. This new widget stores surgical metadata about the patient. Name : the identifier given to the patient, the default value will be the name of the patient directory. OR Date: the date of the surgical intervention. Surgeon: the name of the surgeon who carried out the surgical intervention. This drop-down box has an option to add additional surgeons. When Other is selected, a line edit box will appear to the right. When you finish entering the surgeon name press the Enter key. Target: the name of the surgical target. This drop-down box has an option to add additional targets. When Other is selected, a line edit box will appear to the right. When you finish entering the surgeon name press the Enter key.","title":"Adjust surgical metadata"},{"location":"widgets/04_frame_detection.html","text":"Note To navigate through the 2D view: Move crosshairs in all views : hold Shift while moving the mouse Zoom in/out : hold the right mouse button while moving mouse up/down (can hold Control/Command and scroll) Pan (translate) scan : hold middle-mouse button while moving the mouse Automatic frame detection \u00b6 Automatic frame detection will work for CT and MRI. From the drop-down menu, next to Fiducial Volume , select the volume containing the stereotactic frame. Choose the stereotactic frame that is captured in the CT volume and press Detect Frame Fiducials . Frame detection widget interface. If the automatic detection was successful you will see an image like this: Frame fiducials with frame registration errors. Scroll up/down the slices to check the accuracy of the frame detection. The displayed numbers are the fiducial registration errors, lower values indicate a more accurate registration. Values lower than 0.5mm appear in Green , while values above 0.5mm appear in Red . On the left-hand side you will see the overall frame registration error (anything below 0.5 mm should be acceptable). If you are satisfied with the results, select Confirm Frame Fiducials . If you are not satisfied, you can try adjusting frame registration settings and re-run autodection (see ensuing section). Adjust frame registration settings \u00b6 You can modify the default frame registration settings by clicking the Advanced Settings box in the frame detection widget. Frame detection advanced settings. Transform type (default: Rigidbody): Rigidbody, Similarity, Affine. Iterations (default: 100): Set the maximum number of iterations. Max Landmarks (default: 200): Set the maximum number of frame fiducials to use, each slice in the CT scan contains a set of fiducial points. For instance, if a CT scan is acquired with 124 slices, using a Leksell frame, there would be ~600 fiducial points. Match Centroids (default: No): Starts the process by translating source centroid to target centroid. The first parameter to adjust would be Match Centroids , select Yes and would will see a pop-up message asking if you want to overwrite the previous frame registration data, select Yes : Frame detection pop-up message. If you are still not happy with the registration, try increasing the number of iterations to 200 and re-run. The other parameter you can adjust is the number of iterations, increasing the value to 300. The last choice would be to adjust the transform type, however this will introduce some non-linearity into the registration. Manual frame detection \u00b6 To run manual frame detection select the button Manual Detection . You will need to identify each frame fiducial one-by-one on the same axial slice. If you are unsure of how the stereotactic frame fiducials are numbered you can press Frame Fiducial Legend to see the mapping. All point fiducials will need to be placed on the same axial slice. When you are finished, press Confirm Frame Fiducials . Leksell frame system \u00b6","title":"Frame Detection"},{"location":"widgets/04_frame_detection.html#automatic-frame-detection","text":"Automatic frame detection will work for CT and MRI. From the drop-down menu, next to Fiducial Volume , select the volume containing the stereotactic frame. Choose the stereotactic frame that is captured in the CT volume and press Detect Frame Fiducials . Frame detection widget interface. If the automatic detection was successful you will see an image like this: Frame fiducials with frame registration errors. Scroll up/down the slices to check the accuracy of the frame detection. The displayed numbers are the fiducial registration errors, lower values indicate a more accurate registration. Values lower than 0.5mm appear in Green , while values above 0.5mm appear in Red . On the left-hand side you will see the overall frame registration error (anything below 0.5 mm should be acceptable). If you are satisfied with the results, select Confirm Frame Fiducials . If you are not satisfied, you can try adjusting frame registration settings and re-run autodection (see ensuing section).","title":"Automatic frame detection"},{"location":"widgets/04_frame_detection.html#adjust-frame-registration-settings","text":"You can modify the default frame registration settings by clicking the Advanced Settings box in the frame detection widget. Frame detection advanced settings. Transform type (default: Rigidbody): Rigidbody, Similarity, Affine. Iterations (default: 100): Set the maximum number of iterations. Max Landmarks (default: 200): Set the maximum number of frame fiducials to use, each slice in the CT scan contains a set of fiducial points. For instance, if a CT scan is acquired with 124 slices, using a Leksell frame, there would be ~600 fiducial points. Match Centroids (default: No): Starts the process by translating source centroid to target centroid. The first parameter to adjust would be Match Centroids , select Yes and would will see a pop-up message asking if you want to overwrite the previous frame registration data, select Yes : Frame detection pop-up message. If you are still not happy with the registration, try increasing the number of iterations to 200 and re-run. The other parameter you can adjust is the number of iterations, increasing the value to 300. The last choice would be to adjust the transform type, however this will introduce some non-linearity into the registration.","title":"Adjust frame registration settings"},{"location":"widgets/04_frame_detection.html#manual-frame-detection","text":"To run manual frame detection select the button Manual Detection . You will need to identify each frame fiducial one-by-one on the same axial slice. If you are unsure of how the stereotactic frame fiducials are numbered you can press Frame Fiducial Legend to see the mapping. All point fiducials will need to be placed on the same axial slice. When you are finished, press Confirm Frame Fiducials .","title":"Manual frame detection"},{"location":"widgets/04_frame_detection.html#leksell-frame-system","text":"","title":"Leksell frame system"},{"location":"widgets/05_registration.html","text":"Patient Space Registration \u00b6 All registrations with patient scans will be rigid registrations. With some of the more advanced algorithms you can override this and run non-linear registration but it is strongly discouraged. See the below Algorithms to learn more about each algorithm and the respective settings. Patient space registration settings. Registration Settings \u00b6 Reference Volume: the scan that all other scans will be registered to (generally the pre-operative T1w scan). Frame Volume: the scan that contains the sterotactic frame (either MRI or CT). Floating volumes: the scans that will be co-registered to the reference volume. You can un-check any scans you do not want registered, all scans checked in this drop-down box will be registered. Within the Reference Volume drop-down box, select the scan you want to co-register all other scans to (Reference). In the Frame Volume drop-down box, select the scan that contains the stereotactic fiducials. In the Floating Volumes drop-down box, all other scans (floating) will be checked to indicate they will be registered to the reference. If there are any floating scans you do not want registered, uncheck them. Patient space drop-down volume boxes. To begin the registration, press the Run Registration button. The Registration Process box will display updated information during the registration. When the registration is complete, the view will be automatically changed to a compare view. Patient space drop-down volume boxes. Check Registration Results \u00b6 For each registration you will either select Confirm Registration or Decline Registration . If you choose to decline a registration, the registration can be re-run with a different algorithm. To check the registration, it is helpful to use the opacity slider to change the opacity of the foreground scan (floating scan). Patient space drop-down volume boxes. You can also use the Layer Reveal tool to check the registration in more detail. This tool displays a square that contains half the foreground scan and half the background scan. Registration layer reveal tool. When finished checking the registrations, any confirmed registered scans will disappear from the Floating Volumes drop-down box, declined scans will still appear in the drop-down box. To re-run the registration, update any settings and press the Run Registration button, all previous registration information, for the current floating scans, will be erased. Algorithms \u00b6 The default algorithm will be NiftyReg using nearest neighbor interpolation when applying the transform. You are able to change the registration algorithm and parameters according to the following information. NiftyReg - reg_aladin \u00b6 For information about this algorithm you can visit this page . interpolation order: nearest neighbor, cubic, sinc, linear (default nearest neighbor) ANTS - antsRegistrationSyNQuick \u00b6 transform type: rigid, rigid+affine, rigid+affine+syn, rigid+syn, rigid+affine+b-spl syn, rigid+b-spl syn rigid: rigid (1 stage) rigid+affine: rigid + affine (2 stages) rigid+affine+syn: rigid + affine + deformable syn (3 stages) rigid+syn: rigid + deformable syn (2 stages) rigid+affine+b-spl syn: rigid + affine + deformable b-spline syn (3 stages) rigid+b-spl syn: rigid + deformable b-spline syn (2 stages) threads: number of threads to use cc radius: histogram bins for mutual information in SyN stage (default = 32) spline distance: spline distance for deformable B-spline SyN transform (default = 26) histogram matching: use histogram matching (default = 0) FSL - flirt \u00b6 For information about this algorithm you can visit this page . interpolation order: nearest neighbor, spline, sinc, trilinear (default trilinear) cost: used during the second stage. Options are: mutual info, correlation ratio, least square, normalized correlation, normalized mutual info (default corratio) search cost: used during initial search stage. Options are: mutual info, correlation ratio, least square, normalized correlation, normalized mutual info (default corratio) coarse search: search delta angle to use during initial alignment between the images (default 60) fine search: search delta angle to use during final alignment between the images (default 18) ANTS - antsRegistration \u00b6 For information about this algorithm you can visit this page . This algorithm gives the user more control over each step. The user can specify the \"stages\" of registration, where a stage consists of a transform and an image metric. Each stage consists of levels with specific values set for iterations, shrink factors, and smoothing sigmas. interpolation: applied only to the output image. Options are: linear, nearest neighbor, bspline, cosinc, hammingsinc (default nearest neighbor) metric: CC,MI,GC (CC) CC: ANTS neighborhood cross correlation MI: Mutual information GC: Global Correlation gradient step: how big the mutual info, correlation ratio, least square, normalized correlation, normalized mutual info (default 0.1) convergence: for each hierarchical step, this value specifies the threshold that is needed to be met before stopping the respective step (default 1000x500x250x100x0,1e-6,10) shrink: shrink factor for each hierarchical step (default 8x4x2x2x1) i.e. for an image with 256x256x256 voxels, the levels will work on images of size 32mm, 64mm, 128mm, and 256mm smoothing: smoothing factor applied in each hierarchical step (default 3x2x1x0x0vox) Template Space Registration \u00b6 Click Run Registration . The registration progression will be updated within the Registration Progress window. Once registration is completed, you will see the co-registered volumes appear in the floating drop-down box (under Co-registered Volumes ). You will now confirm that the registration results by clicking the Compare Volumes button. For each registration you will either select Confirm Registration or Decline Registration . If you choose to decline a registration, you will be able to re-run the registration with a different algorithm.","title":"Registration"},{"location":"widgets/05_registration.html#patient-space-registration","text":"All registrations with patient scans will be rigid registrations. With some of the more advanced algorithms you can override this and run non-linear registration but it is strongly discouraged. See the below Algorithms to learn more about each algorithm and the respective settings. Patient space registration settings.","title":"Patient Space Registration"},{"location":"widgets/05_registration.html#registration-settings","text":"Reference Volume: the scan that all other scans will be registered to (generally the pre-operative T1w scan). Frame Volume: the scan that contains the sterotactic frame (either MRI or CT). Floating volumes: the scans that will be co-registered to the reference volume. You can un-check any scans you do not want registered, all scans checked in this drop-down box will be registered. Within the Reference Volume drop-down box, select the scan you want to co-register all other scans to (Reference). In the Frame Volume drop-down box, select the scan that contains the stereotactic fiducials. In the Floating Volumes drop-down box, all other scans (floating) will be checked to indicate they will be registered to the reference. If there are any floating scans you do not want registered, uncheck them. Patient space drop-down volume boxes. To begin the registration, press the Run Registration button. The Registration Process box will display updated information during the registration. When the registration is complete, the view will be automatically changed to a compare view. Patient space drop-down volume boxes.","title":"Registration Settings"},{"location":"widgets/05_registration.html#check-registration-results","text":"For each registration you will either select Confirm Registration or Decline Registration . If you choose to decline a registration, the registration can be re-run with a different algorithm. To check the registration, it is helpful to use the opacity slider to change the opacity of the foreground scan (floating scan). Patient space drop-down volume boxes. You can also use the Layer Reveal tool to check the registration in more detail. This tool displays a square that contains half the foreground scan and half the background scan. Registration layer reveal tool. When finished checking the registrations, any confirmed registered scans will disappear from the Floating Volumes drop-down box, declined scans will still appear in the drop-down box. To re-run the registration, update any settings and press the Run Registration button, all previous registration information, for the current floating scans, will be erased.","title":"Check Registration Results"},{"location":"widgets/05_registration.html#algorithms","text":"The default algorithm will be NiftyReg using nearest neighbor interpolation when applying the transform. You are able to change the registration algorithm and parameters according to the following information.","title":"Algorithms"},{"location":"widgets/05_registration.html#niftyreg-reg_aladin","text":"For information about this algorithm you can visit this page . interpolation order: nearest neighbor, cubic, sinc, linear (default nearest neighbor)","title":"NiftyReg - reg_aladin"},{"location":"widgets/05_registration.html#ants-antsregistrationsynquick","text":"transform type: rigid, rigid+affine, rigid+affine+syn, rigid+syn, rigid+affine+b-spl syn, rigid+b-spl syn rigid: rigid (1 stage) rigid+affine: rigid + affine (2 stages) rigid+affine+syn: rigid + affine + deformable syn (3 stages) rigid+syn: rigid + deformable syn (2 stages) rigid+affine+b-spl syn: rigid + affine + deformable b-spline syn (3 stages) rigid+b-spl syn: rigid + deformable b-spline syn (2 stages) threads: number of threads to use cc radius: histogram bins for mutual information in SyN stage (default = 32) spline distance: spline distance for deformable B-spline SyN transform (default = 26) histogram matching: use histogram matching (default = 0)","title":"ANTS - antsRegistrationSyNQuick"},{"location":"widgets/05_registration.html#fsl-flirt","text":"For information about this algorithm you can visit this page . interpolation order: nearest neighbor, spline, sinc, trilinear (default trilinear) cost: used during the second stage. Options are: mutual info, correlation ratio, least square, normalized correlation, normalized mutual info (default corratio) search cost: used during initial search stage. Options are: mutual info, correlation ratio, least square, normalized correlation, normalized mutual info (default corratio) coarse search: search delta angle to use during initial alignment between the images (default 60) fine search: search delta angle to use during final alignment between the images (default 18)","title":"FSL - flirt"},{"location":"widgets/05_registration.html#ants-antsregistration","text":"For information about this algorithm you can visit this page . This algorithm gives the user more control over each step. The user can specify the \"stages\" of registration, where a stage consists of a transform and an image metric. Each stage consists of levels with specific values set for iterations, shrink factors, and smoothing sigmas. interpolation: applied only to the output image. Options are: linear, nearest neighbor, bspline, cosinc, hammingsinc (default nearest neighbor) metric: CC,MI,GC (CC) CC: ANTS neighborhood cross correlation MI: Mutual information GC: Global Correlation gradient step: how big the mutual info, correlation ratio, least square, normalized correlation, normalized mutual info (default 0.1) convergence: for each hierarchical step, this value specifies the threshold that is needed to be met before stopping the respective step (default 1000x500x250x100x0,1e-6,10) shrink: shrink factor for each hierarchical step (default 8x4x2x2x1) i.e. for an image with 256x256x256 voxels, the levels will work on images of size 32mm, 64mm, 128mm, and 256mm smoothing: smoothing factor applied in each hierarchical step (default 3x2x1x0x0vox)","title":"ANTS - antsRegistration"},{"location":"widgets/05_registration.html#template-space-registration","text":"Click Run Registration . The registration progression will be updated within the Registration Progress window. Once registration is completed, you will see the co-registered volumes appear in the floating drop-down box (under Co-registered Volumes ). You will now confirm that the registration results by clicking the Compare Volumes button. For each registration you will either select Confirm Registration or Decline Registration . If you choose to decline a registration, you will be able to re-run the registration with a different algorithm.","title":"Template Space Registration"},{"location":"widgets/06_anatomical_fiducials.html","text":"Anatomical Landmarks \u00b6 The midline plane will need to be determined, which relies on four points: the anterior commissure (AC), the posterior commissure (PC), and two midline points (Mid1-2). The midline points should be at least one interhemispheric point and one brainstem point. These 4 points are then used to define the midline plane, which is used to define the Talaraich coordinate system. AC point \u00b6 The anterior commissure. PC point \u00b6 The posterior commissure. Midline Points \u00b6 Infracollicular Sulcus \u00b6 The infracollicular sulcus. Superior interpeduncular fossa \u00b6 The superior interpeduncular fossa.","title":"Anatomical Fiducials"},{"location":"widgets/06_anatomical_fiducials.html#anatomical-landmarks","text":"The midline plane will need to be determined, which relies on four points: the anterior commissure (AC), the posterior commissure (PC), and two midline points (Mid1-2). The midline points should be at least one interhemispheric point and one brainstem point. These 4 points are then used to define the midline plane, which is used to define the Talaraich coordinate system.","title":"Anatomical Landmarks"},{"location":"widgets/06_anatomical_fiducials.html#ac-point","text":"The anterior commissure.","title":"AC point"},{"location":"widgets/06_anatomical_fiducials.html#pc-point","text":"The posterior commissure.","title":"PC point"},{"location":"widgets/06_anatomical_fiducials.html#midline-points","text":"","title":"Midline Points"},{"location":"widgets/06_anatomical_fiducials.html#infracollicular-sulcus","text":"The infracollicular sulcus.","title":"Infracollicular Sulcus"},{"location":"widgets/06_anatomical_fiducials.html#superior-interpeduncular-fossa","text":"The superior interpeduncular fossa.","title":"Superior interpeduncular fossa"}]}